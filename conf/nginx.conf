worker_processes  1;
error_log /var/log/nginx/error.log;
events {
    worker_connections 1024;
}
# openresty -c  conf/nginx.conf -p ./

http {
    server {
        listen 6699;
        location / {
            default_type text/html;
            content_by_lua_block {
                ngx.say("Hello World")
            }
        }

        location = /sum {
            internal;
            content_by_lua_block {
                local args = ngx.req.get_uri_args()
                    ngx.say(tonumber(args.a) + tonumber(args.b))
            }
        }
        location /sub {
            internal;
            content_by_lua_block {
                local args = ngx.req.get_uri_args()
                ngx.print(tonumber(args.a) + tonumber(args.b))
            }

        }

        location = /subduction {
            internal;
            content_by_lua_block{
                ngx.sleep(0.1)
                local args = ngx.req.get_uri_args()
                ngx.print(tonumber(args.a) - tonumber(args.b))
            }
        }

        location = /app/test_parallels {
            content_by_lua_block {
                local start_time = ngx.now()
                local res1, res2 = ngx.location.capture_multi ({
                    {"/sum", {args={a=8,b=8}}},
                    {"/subduction", {args={a=3,b=8}}}
                })
                ngx.say("status:", res1.status, "response:", res1.body)
                ngx.say("status:", res2.status, "response:", res2.body)
                ngx.say("time used:",ngx.now() - start_time)
            }
        }

        location = /app/test_queue {
            content_by_lua_block {
                local start_time = ngx.now()
                local res1= ngx.location.capture_multi ({
                    {"/sum", {args={a=1,b=8}}},
                })

                local res2= ngx.location.capture_multi ({
                    {"/subduction", {args={a=1,b=8}}},
                })
                ngx.say("status:", res1.status, "response:", res1.body)
                ngx.say("status:", res2.status, "response:", res2.body)
                ngx.say("time used:",ngx.now() - start_time)
            }
        }
        location = /app/test {
            content_by_lua_block {
                local res = ngx.location.capture(
                    "/sum", {args={a=3,b=8}}
                )
                ngx.say("status:", res.status, "response:", res.body)
            }
        }

        location ~ ^/static/([-_a-zA-Z0-9]+).jpg} {
            set $image_name $1;
            content_by_lua_block {
                ngx.exec("/download_internal/images", .. ngx.var.image_name .. ".jpg");
            }
        }
        
        location /download_internal {
            internal;

            alias ../download;
        }

        location = /foo {
            content_by_lua_block {
                ngx.say([[I am foo]])
            }
        }

        location = / {
            rewrite_by_lua_block {
                return ngx.redirect("/foo")
            }
        }



    }
}
